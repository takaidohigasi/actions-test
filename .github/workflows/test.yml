name: test 

on:
  issue_comment:
    types: [created]

jobs:
  test:
    if: startsWith(github.event.comment.body, '/apply')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      issues: write
    steps:
      - name: Add eyes reaction
        env:
          REPO: ${{ github.repository }}
          COMMENT_ID: ${{ github.event.comment.id }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/$REPO/issues/comments/$COMMENT_ID/reactions \
          -f content='eyes'

      - name: setup python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: '3.x'

      - name: create comment body
        id: comment-body
        run: |
          DELIMITER=THISISDELIMITERSHOUDNEVERDUPAGKUGJHDGFJSHDGTYEWOM
          echo "body<<$DELIMITER" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "test" >> $GITHUB_OUTPUT
          echo "<!-- test:magic:comment -->" >> $GITHUB_OUTPUT

          echo "$DELIMITER" >> $GITHUB_OUTPUT

      - name: find magic comment
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
        id: magic-comment
        with:
          issue-number: ${{ github.event.issue.number }}
          body-includes: "<!-- test:magic:comment -->"

      - name: find pull request number
        if: ${{ steps.magic-comment.outputs.comment-id != 0 }}
        id: pr-number
        run: |
          python -c "import re; print(re.search(r'/(?<=\/pull\/)(\d+)/', "${{ steps.magic-comment.outputs }}").group(1))"

      - name: delete comment
        if: ${{ steps.magic-comment.outputs.comment-id != 0 }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ steps.magic-comment.outputs.comment-id }},
            })

      - name: create comment on the issue
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          issue-number: ${{ github.event.issue.number }}
          body: ${{ steps.comment-body.outputs.body }}
